# Copyright (c) 2022 - 2024, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/.

# https://flit.pypa.io/en/latest/pyproject_toml.html
[build-system]
requires = ["flit_core >=3.2.0,<4.0.0"]
build-backend = "flit_core.buildapi"


[project]
name = "macaron"
requires-python = ">=3.11"
authors = [
    {"name" = "Trong Nhan Mai", "email" = "trong.nhan.mai@oracle.com"},
    {"name" = "Behnaz Hassanshahi", "email" = "behnaz.hassanshahi@oracle.com"},
]
maintainers = [
    {"name" = "Trong Nhan Mai", "email" = "trong.nhan.mai@oracle.com"},
    {"name" = "Behnaz Hassanshahi", "email" = "behnaz.hassanshahi@oracle.com"},
]
dynamic = ["version", "description"]
license = {file = "LICENSE.txt"}
readme = "README.md"
dependencies = [
    "requests >=2.32.3,<3.0.0",
    "pydriller >=2.0,<3.0.0",
    "yamale >=5.0.0,<6.0.0",
    "packaging >=24.0,<25.0.0",
    "jinja2 >=3.1.2,<4.0.0",
    "SQLAlchemy >=2.0.0,<3.0.0",
    "defusedxml >=0.7.1,<1.0.0",
    "packageurl-python >= 0.11.1,<1.0.0",
    "ruamel.yaml >= 0.18.6,<1.0.0",
    "jsonschema >= 4.22.0,<5.0.0",
    "cyclonedx-bom >=4.0.0,<5.0.0",
    "cyclonedx-python-lib[validation] >=7.3.4,<8.0.0",
    "beautifulsoup4 >= 4.12.0,<5.0.0",
]
keywords = []
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Universal Permissive License (UPL)",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.scripts]
macaron = 'macaron.__main__:main'

[project.entry-points]

[project.optional-dependencies]
# The 'actions' requirements match exactly the packages installed by the workflows.
# We keep them listed here to ensure the infrastructure BOM is consistent with what's
# installed. Make sure to keep the requirements in sync with the workflows!
actions = [
    "commitizen >=3.13.0,<4.0.0",
    "twine >=5.0.0,<6.0.0",
]
dev = [
    "flit >=3.2.0,<4.0.0",
    "mypy >=1.0.0,<1.12",
    "types-pyyaml >=6.0.4,<7.0.0",
    "types-requests >=2.25.6,<3.0.0",
    "types-jsonschema >=4.22.0,<5.0.0",
    "pip-audit >=2.5.6,<3.0.0",
    "pylint >=3.0.3,<4.0.0",
    "cyclonedx-bom >=4.0.0,<5.0.0",
    "types-beautifulsoup4 >= 4.12.0,<5.0.0",
]
docs = [
    "sphinx >=7.0.0,<8.0.0",
    "sphinx-autodoc-typehints >=2.0.0,<3.0.0",
    "sphinx-rtd-theme >=2.0.0,<3.0.0",
    "numpydoc >=1.5.0,<2.0.0",
    "sphinx_tabs >=3.4.1,<4.0.0",
    "sphinx-togglebutton >=0.3.2,<1.0.0",
]
hooks = [
    "pre-commit >=3.0.0,<3.8.0",
]
# Note that the `custom_exit_code` and `env` plugins may currently be unmaintained.
test = [
    "hypothesis >=6.100.1,<7.0.0",
    "pytest >=8.2.2,<9.0.0",
    "pytest-custom_exit_code >=0.3.0,<1.0.0",
    "pytest-cov >=5.0.0,<6.0.0",
    "pytest-env >=1.0.0,<2.0.0",
    "pytest_httpserver >=1.0.10,<2.0.0",
    "syrupy >=4.0.0,<5.0.0",
]

test-docker = [
    "jsonschema >= 4.22.0,<5.0.0",
    "cfgv >=3.4.0,<4.0.0",
    "ruamel.yaml >=0.18.6,<1.0.0",
]

[project.urls]
Homepage = "https://github.com/oracle/macaron"
Changelog = "https://github.com/oracle/macaron/blob/main/CHANGELOG.md"
Documentation = "https://oracle.github.io/macaron/index.html"
Issues = "https://github.com/oracle/macaron/issues"


# https://bandit.readthedocs.io/en/latest/config.html
# Skip test B101 because of issue https://github.com/PyCQA/bandit/issues/457
[tool.bandit]
tests = []
skips = ["B101"]


# https://github.com/psf/black#configuration
[tool.black]
line-length = 120


# https://github.com/commitizen-tools/commitizen
# https://commitizen-tools.github.io/commitizen/bump/
[tool.commitizen]
bump_message = """bump: release $current_version â†’ $new_version

Automatically generated by Commitizen.
"""
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = true
version_files = [
    "src/macaron/__init__.py:__version__",
]
major_version_zero = true
version = "0.13.0"


# https://github.com/pytest-dev/pytest-cov
# https://github.com/nedbat/coveragepy
[tool.coverage.report]
fail_under = 60
show_missing = true

[tool.coverage.run]
omit = [
    "src/macaron/__main__.py",
]


# https://flit.pypa.io/en/latest/pyproject_toml.html#sdist-section
# See also: https://github.com/pypa/flit/issues/565
[tool.flit.sdist]
include = []
exclude = [
    ".github/",
    "docs/",
    "tests/",
    ".flake8",
    ".gitignore",
    ".pre-commit-config.yaml",
    "CHANGELOG.md",
    "Makefile",
    "SECURITY.md",
]


# https://pycqa.github.io/isort/
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
skip_gitignore = true


# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml
[tool.mypy]
# exclude=
show_error_codes = true
show_column_numbers = true
check_untyped_defs = true
incremental = false
strict_equality = true
warn_return_any = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disable_error_code = []

[[tool.mypy.overrides]]
module = [
    "pytest.*",
    "pydriller.*",
    "gitdb.*",
    "yamale.*",
    "defusedxml.*",
]
ignore_missing_imports = true


# https://pylint.pycqa.org/en/latest/user_guide/configuration/index.html
[tool.pylint.MASTER]
fail-under = 10.0
suggestion-mode = true  # Remove this setting when pylint v4 is released.
load-plugins = [
    "pylint.extensions.for_any_all",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.set_membership",
    "pylint.extensions.typing",
]
disable = [
    "fixme",
    "line-too-long",  # Replaced by Flake8 Bugbear B950 check.
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-boolean-expressions",
    "too-many-branches",
    "too-many-function-args",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-positional-arguments",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-statements",
    "duplicate-code",
]

[tool.pylint.MISCELLANEOUS]
notes = [
    "FIXME",
    "TODO",
    "BUGBUG",
]

[tool.pylint.FORMAT]
max-line-length = 120


# https://docs.pytest.org/en/latest/reference/customize.html#configuration-file-formats
# https://docs.pytest.org/en/latest/reference/reference.html#configuration-options
# https://docs.pytest.org/en/latest/reference/reference.html#command-line-flags
[tool.pytest.ini_options]
minversion = "7.0"
addopts = """-vv -ra --tb native \
    --doctest-modules --doctest-continue-on-failure --doctest-glob '*.rst' \
    --cov macaron \
    --ignore tests/integration \
"""  # Consider adding --pdb
# https://docs.python.org/3/library/doctest.html#option-flags
doctest_optionflags = "IGNORE_EXCEPTION_DETAIL"

env = [
    "PYTHONWARNINGS=always::DeprecationWarning",
]
filterwarnings = [
    # https://docs.pytest.org/en/latest/how-to/failures.html#warning-about-unraisable-exceptions-and-unhandled-thread-exceptions
    "error::pytest.PytestUnraisableExceptionWarning",
    "error::pytest.PytestUnhandledThreadExceptionWarning",
    "error::DeprecationWarning:pkg_resources",
]
