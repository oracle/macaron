# Copyright (c) 2024 - 2024, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/.

"""Tests for heuristic detecting wheel (.whl) file absence from PyPI packages"""
from unittest.mock import MagicMock

import pytest

from macaron.errors import HeuristicAnalyzerValueError
from macaron.malware_analyzer.pypi_heuristics.heuristics import HeuristicResult
from macaron.malware_analyzer.pypi_heuristics.metadata.wheel_absence import WheelAbsenceAnalyzer


def test_analyze_no_information(pypi_package_json: MagicMock) -> None:
    """Test for when there is no release information, so error"""
    analyzer = WheelAbsenceAnalyzer()

    pypi_package_json.get_releases.return_value = None

    with pytest.raises(HeuristicAnalyzerValueError):
        analyzer.analyze(pypi_package_json)


def test_analyze_tar_present(pypi_package_json: MagicMock) -> None:
    """Test for when only .tar.gz is present, so failed"""
    analyzer = WheelAbsenceAnalyzer()
    version = "0.1.0"
    filename = "ttttttttest_nester.py-0.1.0.tar.gz"

    release = {
        version: [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "defa2fbcebaeeb909511139ce28dac4a77ab2452ba72b49a22b12981b2f375b3",
                    "md5": "9203bbb130f8ddb38269f4861c170d04",
                    "sha256": "168bcccbf5106132e90b85659297700194369b8f6b3e5a03769614f0d200e370",
                },
                "downloads": -1,
                "filename": filename,
                "has_sig": False,
                "md5_digest": "9203bbb130f8ddb38269f4861c170d04",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": None,
                "size": 546,
                "upload_time": "2016-10-13T05:42:27",
                "upload_time_iso_8601": "2016-10-13T05:42:27.073842Z",
                "url": f"https://files.pythonhosted.org/packages/de/fa/2fbcebaeeb909511139ce28d \
                ac4a77ab2452ba72b49a22b12981b2f375b3/{filename}",
                "yanked": False,
                "yanked_reason": None,
            }
        ]
    }

    pypi_package_json.get_releases.return_value = release
    pypi_package_json.get_latest_version.return_value = version
    pypi_package_json.component.version = None
    expected_result: tuple[HeuristicResult, dict] = (HeuristicResult.FAIL, {version: [filename]})

    actual_result = analyzer.analyze(pypi_package_json)

    assert actual_result == expected_result


def test_analyze_whl_present(pypi_package_json: MagicMock) -> None:
    """Test for when only .whl is present, so pass"""
    analyzer = WheelAbsenceAnalyzer()
    version = "0.1.0"
    filename = "ttttttttest_nester.py-0.1.0.whl"

    release = {
        version: [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "defa2fbcebaeeb909511139ce28dac4a77ab2452ba72b49a22b12981b2f375b3",
                    "md5": "9203bbb130f8ddb38269f4861c170d04",
                    "sha256": "168bcccbf5106132e90b85659297700194369b8f6b3e5a03769614f0d200e370",
                },
                "downloads": -1,
                "filename": filename,
                "has_sig": False,
                "md5_digest": "9203bbb130f8ddb38269f4861c170d04",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": None,
                "size": 546,
                "upload_time": "2016-10-13T05:42:27",
                "upload_time_iso_8601": "2016-10-13T05:42:27.073842Z",
                "url": f"https://files.pythonhosted.org/packages/de/fa/2fbcebaeeb909511139ce28d \
                ac4a77ab2452ba72b49a22b12981b2f375b3/{filename}",
                "yanked": False,
                "yanked_reason": None,
            }
        ]
    }

    pypi_package_json.get_releases.return_value = release
    pypi_package_json.component.version = version
    expected_result: tuple[HeuristicResult, dict] = (HeuristicResult.PASS, {version: [filename]})

    actual_result = analyzer.analyze(pypi_package_json)

    assert actual_result == expected_result


def test_analyze_both_present(pypi_package_json: MagicMock) -> None:
    """Test for when both .tar.gz and .whl are present, so passed"""
    analyzer = WheelAbsenceAnalyzer()
    version = "0.1.0"
    file_prefix = "ttttttttest_nester.py-0.1.0"

    release = {
        version: [
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "defa2fbcebaeeb909511139ce28dac4a77ab2452ba72b49a22b12981b2f375b3",
                    "md5": "9203bbb130f8ddb38269f4861c170d04",
                    "sha256": "168bcccbf5106132e90b85659297700194369b8f6b3e5a03769614f0d200e370",
                },
                "downloads": -1,
                "filename": f"{file_prefix}.whl",
                "has_sig": False,
                "md5_digest": "9203bbb130f8ddb38269f4861c170d04",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": None,
                "size": 546,
                "upload_time": "2016-10-13T05:42:27",
                "upload_time_iso_8601": "2016-10-13T05:42:27.073842Z",
                "url": f"https://files.pythonhosted.org/packages/de/fa/2fbcebaeeb909511139ce28d \
                ac4a77ab2452ba72b49a22b12981b2f375b3/{file_prefix}.whl",
                "yanked": False,
                "yanked_reason": None,
            },
            {
                "comment_text": "",
                "digests": {
                    "blake2b_256": "defa2fbcebaeeb909511139ce28dac4a77ab2452ba72b49a22b12981b2f375b3",
                    "md5": "9203bbb130f8ddb38269f4861c170d04",
                    "sha256": "168bcccbf5106132e90b85659297700194369b8f6b3e5a03769614f0d200e370",
                },
                "downloads": -1,
                "filename": f"{file_prefix}.tar.gz",
                "has_sig": False,
                "md5_digest": "9203bbb130f8ddb38269f4861c170d04",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": None,
                "size": 546,
                "upload_time": "2016-10-13T05:42:27",
                "upload_time_iso_8601": "2016-10-13T05:42:27.073842Z",
                "url": f"https://files.pythonhosted.org/packages/de/fa/2fbcebaeeb909511139ce28d \
                ac4a77ab2452ba72b49a22b12981b2f375b3/{file_prefix}.tar.gz",
                "yanked": False,
                "yanked_reason": None,
            },
        ]
    }

    pypi_package_json.get_releases.return_value = release
    pypi_package_json.component.version = version
    expected_result: tuple[HeuristicResult, dict] = (
        HeuristicResult.PASS,
        {version: [f"{file_prefix}.whl", f"{file_prefix}.tar.gz"]},
    )

    actual_result = analyzer.analyze(pypi_package_json)

    assert actual_result == expected_result
