{
    "metadata": {
        "timestamps": "2022-11-09 17:45:38"
    },
    "target": {
        "info": {
            "full_name": "micronaut-projects/micronaut-core",
            "local_cloned_path": "git_repos/github_com/micronaut-projects/micronaut-core",
            "remote_path": "https://github.com/micronaut-projects/micronaut-core",
            "branch": "3.5.x",
            "commit_hash": "08357218ce6d6347c4d1e3ff74a8b2936fe3c3dc",
            "commit_date": "2022-09-04T10:17:23+00:00"
        },
        "provenances": {
            "is_inferred": true,
            "content": {
                "github_actions": [
                    {
                        "_type": "https://in-toto.io/Statement/v0.1",
                        "subject": [],
                        "predicateType": "https://slsa.dev/provenance/v0.2",
                        "predicate": {
                            "builder": {
                                "id": "https://github.com/micronaut-projects/micronaut-core/blob/08357218ce6d6347c4d1e3ff74a8b2936fe3c3dc/.github/workflows/gradle.yml"
                            },
                            "buildType": "Custom github_actions",
                            "invocation": {
                                "configSource": {
                                    "uri": "https://github.com/micronaut-projects/micronaut-core@refs/heads/3.5.x",
                                    "digest": {
                                        "sha1": "08357218ce6d6347c4d1e3ff74a8b2936fe3c3dc"
                                    },
                                    "entryPoint": "https://github.com/micronaut-projects/micronaut-core/blob/08357218ce6d6347c4d1e3ff74a8b2936fe3c3dc/.github/workflows/gradle.yml"
                                },
                                "parameters": {},
                                "environment": {}
                            },
                            "buildConfig": {},
                            "metadata": {
                                "buildInvocationId": "",
                                "buildStartedOn": "<TIMESTAMP>",
                                "buildFinishedOn": "<TIMESTAMP>",
                                "completeness": {
                                    "parameters": "false",
                                    "environment": "false",
                                    "materials": "false"
                                },
                                "reproducible": "false"
                            },
                            "materials": [
                                {
                                    "uri": "<URI>",
                                    "digest": {}
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "checks": {
            "summary": {
                "DISABLED": 0,
                "FAILED": 4,
                "PASSED": 4,
                "SKIPPED": 0,
                "UNKNOWN": 0
            },
            "results": [
                {
                    "check_id": "mcn_build_as_code_1",
                    "check_description": "The build definition and configuration executed by the build service is verifiably derived from text file definitions stored in a version control system.",
                    "slsa_requirements": [
                        "Build as code - SLSA Level 3"
                    ],
                    "justification": [
                        {
                            "The target repository uses build tool gradle to deploy": "https://github.com/micronaut-projects/micronaut-core/blob/08357218ce6d6347c4d1e3ff74a8b2936fe3c3dc/.github/workflows/gradle.yml",
                            "The build is triggered by": "https://github.com/micronaut-projects/micronaut-core/blob/08357218ce6d6347c4d1e3ff74a8b2936fe3c3dc/.github/workflows/gradle.yml"
                        },
                        "Deploy command: ['./gradlew', 'publishToSonatype', 'docs', '--no-daemon']",
                        "However, could not find a passing workflow run."
                    ],
                    "result_type": "PASSED"
                },
                {
                    "check_id": "mcn_build_script_1",
                    "check_description": "Check if the target repo has a valid build script.",
                    "slsa_requirements": [
                        "Scripted Build - SLSA Level 1"
                    ],
                    "justification": [
                        "Check mcn_build_script_1 is set to PASSED because mcn_build_service_1 PASSED."
                    ],
                    "result_type": "PASSED"
                },
                {
                    "check_id": "mcn_build_service_1",
                    "check_description": "Check if the target repo has a valid build service.",
                    "slsa_requirements": [
                        "Build service - SLSA Level 2"
                    ],
                    "justification": [
                        "Check mcn_build_service_1 is set to PASSED because mcn_build_as_code_1 PASSED."
                    ],
                    "result_type": "PASSED"
                },
                {
                    "check_id": "mcn_version_control_system_1",
                    "check_description": "Check whether the target repo uses a version control system.",
                    "slsa_requirements": [
                        "Version controlled - SLSA Level 2"
                    ],
                    "justification": [
                        {
                            "This is a Git repository": "https://github.com/micronaut-projects/micronaut-core"
                        }
                    ],
                    "result_type": "PASSED"
                },
                {
                    "check_id": "mcn_policy_check_1",
                    "check_description": "Check whether the SLSA provenance for the produced artifact conforms to the policy.",
                    "slsa_requirements": [
                        "Policy - SLSA Level 3"
                    ],
                    "justification": [
                        "Could not verify policy against the provenance."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_available_1",
                    "check_description": "Check whether the target has intoto provenance.",
                    "slsa_requirements": [
                        "Provenance - Available - SLSA Level 1",
                        "Provenance content - Identifies build instructions - SLSA Level 1",
                        "Provenance content - Identifies artifacts - SLSA Level 1",
                        "Provenance content - Identifies builder - SLSA Level 1"
                    ],
                    "justification": [
                        "Could not find any SLSA provenances."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_level_three_1",
                    "check_description": "Check whether the target has SLSA provenance level 3.",
                    "slsa_requirements": [
                        "Provenance - Non falsifiable - SLSA Level 3",
                        "Provenance content - Includes all build parameters - SLSA Level 3",
                        "Provenance content - Identifies entry point - SLSA Level 3",
                        "Provenance content - Identifies source code - SLSA Level 2"
                    ],
                    "justification": [
                        "Check mcn_provenance_level_three_1 is set to FAILED because mcn_provenance_available_1 FAILED."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_trusted_builder_level_three_1",
                    "check_description": "Check whether the target uses a trusted SLSA level 3 builder.",
                    "slsa_requirements": [
                        "Hermetic - SLSA Level 4",
                        "Isolated - SLSA Level 3",
                        "Parameterless - SLSA Level 4",
                        "Ephemeral environment - SLSA Level 3"
                    ],
                    "justification": [
                        "Could not find a trusted level 3 builder as a GitHub Actions workflow."
                    ],
                    "result_type": "FAILED"
                }
            ]
        }
    },
    "dependencies": {
        "analyzed_deps": 2,
        "unique_dep_repos": 2,
        "checks_summary": [
            {
                "check_id": "mcn_policy_check_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_provenance_available_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_build_as_code_1",
                "num_deps_pass": 1
            },
            {
                "check_id": "mcn_version_control_system_1",
                "num_deps_pass": 2
            },
            {
                "check_id": "mcn_trusted_builder_level_three_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_build_script_1",
                "num_deps_pass": 2
            },
            {
                "check_id": "mcn_provenance_level_three_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_build_service_1",
                "num_deps_pass": 2
            }
        ],
        "dep_status": [
            {
                "id": "slf4j",
                "description": "Analysis Completed.",
                "report": "slf4j.html",
                "status": "AVAILABLE"
            },
            {
                "id": "caffeine",
                "description": "Analysis Completed.",
                "report": "caffeine.html",
                "status": "AVAILABLE"
            }
        ]
    }
}
