{
    "metadata": {
        "timestamps": "2024-05-07 15:12:19",
        "has_passing_check": false,
        "run_checks": [
            "mcn_provenance_available_1",
            "mcn_provenance_witness_level_one_1",
            "mcn_build_as_code_1",
            "mcn_provenance_derived_commit_1",
            "mcn_provenance_level_three_1",
            "mcn_version_control_system_1",
            "mcn_infer_artifact_pipeline_1",
            "mcn_trusted_builder_level_three_1",
            "mcn_build_script_1",
            "mcn_build_service_1",
            "mcn_provenance_expectation_1",
            "mcn_provenance_derived_repo_1"
        ],
        "check_tree": {
            "mcn_provenance_available_1": {
                "mcn_provenance_witness_level_one_1": {},
                "mcn_provenance_level_three_1": {},
                "mcn_provenance_expectation_1": {}
            },
            "mcn_provenance_derived_commit_1": {},
            "mcn_version_control_system_1": {
                "mcn_trusted_builder_level_three_1": {
                    "mcn_build_as_code_1": {
                        "mcn_infer_artifact_pipeline_1": {},
                        "mcn_build_service_1": {}
                    }
                },
                "mcn_build_script_1": {}
            },
            "mcn_provenance_derived_repo_1": {}
        }
    },
    "target": {
        "info": {
            "full_name": "pkg:maven/com.example/nonexistent@1.0.0",
            "local_cloned_path": "Unable to find a repository.",
            "remote_path": "",
            "branch": "",
            "commit_hash": "",
            "commit_date": ""
        },
        "provenances": {
            "is_inferred": true,
            "content": {}
        },
        "checks": {
            "summary": {
                "DISABLED": 0,
                "FAILED": 12,
                "PASSED": 0,
                "SKIPPED": 0,
                "UNKNOWN": 0
            },
            "results": [
                {
                    "check_id": "mcn_build_as_code_1",
                    "check_description": "The build definition and configuration executed by the build service is verifiably derived from text file definitions stored in a version control system.",
                    "slsa_requirements": [
                        "Build as code - SLSA Level 3"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_build_script_1",
                    "check_description": "Check if the target repo has a valid build script.",
                    "slsa_requirements": [
                        "Scripted Build - SLSA Level 1"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_build_service_1",
                    "check_description": "Check if the target repo has a valid build service.",
                    "slsa_requirements": [
                        "Build service - SLSA Level 2"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_infer_artifact_pipeline_1",
                    "check_description": "Detects potential pipelines from which an artifact is published.",
                    "slsa_requirements": [
                        "Build as code - SLSA Level 3"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_available_1",
                    "check_description": "Check whether the target has intoto provenance.",
                    "slsa_requirements": [
                        "Provenance - Available - SLSA Level 1",
                        "Provenance content - Identifies build instructions - SLSA Level 1",
                        "Provenance content - Identifies artifacts - SLSA Level 1",
                        "Provenance content - Identifies builder - SLSA Level 1"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_derived_commit_1",
                    "check_description": "Check whether the commit came from provenance.",
                    "slsa_requirements": [
                        "Security - SLSA Level 4"
                    ],
                    "justification": [
                        "commit_digest: No provenance found."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_derived_repo_1",
                    "check_description": "Check whether the repo came from provenance.",
                    "slsa_requirements": [
                        "Security - SLSA Level 4"
                    ],
                    "justification": [
                        "repository_url: No provenance found."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_expectation_1",
                    "check_description": "Check whether the SLSA provenance for the produced artifact conforms to the expected value.",
                    "slsa_requirements": [
                        "Provenance conforms with expectations - SLSA Level 3"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_level_three_1",
                    "check_description": "Check whether the target has SLSA provenance level 3.",
                    "slsa_requirements": [
                        "Provenance - Non falsifiable - SLSA Level 3",
                        "Provenance content - Includes all build parameters - SLSA Level 3",
                        "Provenance content - Identifies entry point - SLSA Level 3",
                        "Provenance content - Identifies source code - SLSA Level 2"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_provenance_witness_level_one_1",
                    "check_description": "Check whether the target has a level-1 witness provenance.",
                    "slsa_requirements": [
                        "Provenance - Available - SLSA Level 1",
                        "Provenance content - Identifies build instructions - SLSA Level 1",
                        "Provenance content - Identifies artifacts - SLSA Level 1",
                        "Provenance content - Identifies builder - SLSA Level 1"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_trusted_builder_level_three_1",
                    "check_description": "Check whether the target uses a trusted SLSA level 3 builder.",
                    "slsa_requirements": [
                        "Hermetic - SLSA Level 4",
                        "Isolated - SLSA Level 3",
                        "Parameterless - SLSA Level 4",
                        "Ephemeral environment - SLSA Level 3"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                },
                {
                    "check_id": "mcn_version_control_system_1",
                    "check_description": "Check whether the target repo uses a version control system.",
                    "slsa_requirements": [
                        "Version controlled - SLSA Level 2"
                    ],
                    "justification": [
                        "Not Available."
                    ],
                    "result_type": "FAILED"
                }
            ]
        }
    },
    "dependencies": {
        "analyzed_deps": 0,
        "unique_dep_repos": 0,
        "checks_summary": [
            {
                "check_id": "mcn_provenance_available_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_provenance_witness_level_one_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_build_as_code_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_provenance_derived_commit_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_provenance_level_three_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_version_control_system_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_infer_artifact_pipeline_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_trusted_builder_level_three_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_build_script_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_build_service_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_provenance_expectation_1",
                "num_deps_pass": 0
            },
            {
                "check_id": "mcn_provenance_derived_repo_1",
                "num_deps_pass": 0
            }
        ],
        "dep_status": []
    }
}
