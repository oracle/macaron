# Copyright (c) 2024 - 2025, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/.

"""Define the heuristic enum."""

from enum import Enum


class Heuristics(str, Enum):
    """Seven heuristics for detecting suspicious pypi package."""

    #: Indicates that the package does not contain any project links (such as documentation or Git repository pages).
    EMPTY_PROJECT_LINK = "empty_project_link"

    #: Indicates that the source code repository for the package was not found.
    SOURCE_CODE_REPO = "source_code_repo"

    #: Indicates that the package contains only one release.
    ONE_RELEASE = "one_release"

    #: The package has a high release frequency. The average release time (calculated as the sum of all release gaps
    #: divided by the number of gaps) is below a set threshold.
    HIGH_RELEASE_FREQUENCY = "high_release_frequency"

    #: Indicates that all releases contain the same content (with identical digests).
    UNCHANGED_RELEASE = "unchanged_release"

    #: Indicates that the maintainer has registered their account close to the latest release date.
    CLOSER_RELEASE_JOIN_DATE = "closer_release_join_date"

    #: Indicates that the setup.py file contains suspicious imports, such as base64 and requests.
    SUSPICIOUS_SETUP = "suspicious_setup"

    #: Indicates that the package does not include a .whl file.
    WHEEL_ABSENCE = "wheel_absence"

    #: Indicates that the package has an unusually large version number for a single release.
    ANOMALOUS_VERSION = "anomalous_version"

    #: Indicates that the package name is similar to a popular package.
    TYPOSQUATTING_PRESENCE = "typosquatting_presence"

    #: Indicates that the package source code contains suspicious code patterns.
    SUSPICIOUS_PATTERNS = "suspicious_patterns"


class HeuristicResult(str, Enum):
    """Result type indicating the outcome of a heuristic."""

    #: Indicates that no suspicious activity was detected.
    PASS = "PASS"  # nosec B105

    #: Indicates that suspicious activity was detected.
    FAIL = "FAIL"

    #: Indicates that the heuristic check could not be performed due to missing metadata.
    #: The `SKIP` result occurs when the necessary metadata is not available. This often happens
    #: when fetching data through the PyPI API and the relevant data, such as the maintainer's
    #: join date or release information, is missing or unavailable.
    SKIP = "SKIP"
