# Copyright (c) 2025 - 2025, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/.

rules:
- id: exfiltration_remote-exfiltration
  metadata:
    description: Detects the flow of sensitive information to a remote endpoint.
  message: Detected exfiltration of sensitive data to a remote endpoint
  languages:
  - python
  severity: ERROR
  mode: taint
  options:
    # this will help us detect the flow of objects for exfiltration, like
    # "with requests.Session() as s: s.get(...)"
    symbolic_propagation: true
  pattern-sources:
  - pattern-either:
        # result of code/command evaluation
    - pattern: exec(...)
    - pattern: eval(...)
    - pattern: builtins.exec(...)
    - pattern: builtins.eval(...)
    - pattern: __import__('builtins').exec(...)
    - pattern: __import__('builtins').eval(...)

    # process spawning
        # using subprocess module
    - pattern: subprocess.check_output(...)
    - pattern: subprocess.check_call(...)
    - pattern: subprocess.run(...)
    - pattern: subprocess.call(...)
    - pattern: subprocess.Popen(...)
    - pattern: subprocess.getoutput(...)
    - pattern: subprocess.getstatusoutput(...)
        # using os module
    - pattern: os.execl(...)
    - pattern: os.execle(...)
    - pattern: os.execlp(...)
    - pattern: os.execlpe(...)
    - pattern: os.execv(...)
    - pattern: os.execve(...)
    - pattern: os.execvp(...)
    - pattern: os.execvpe(...)
    - pattern: os.popen(...)
    - pattern: os.posix_spawn(...)
    - pattern: os.posix_spawnp(...)
    - pattern: os.spawnl(...)
    - pattern: os.spawnle(...)
    - pattern: os.spawnlp(...)
    - pattern: os.spawnlpe(...)
    - pattern: os.spawnv(...)
    - pattern: os.spawnve(...)
    - pattern: os.spawnvp(...)
    - pattern: os.spawnvpe(...)
    - pattern: os.system(...)
    - pattern: os.popen(...)
        # using commands module
    - pattern: commands.getstatusoutput(...)
    - pattern: commands.getoutput(...)
        # using runpy module
    - pattern: runpy.run_module(...)
    - pattern: runpy.run_path(...)

        # environment variables
    - pattern: os.environ
    - pattern: os.environ[...]
    - pattern: os.environ.get(...)
    - pattern: os.environb
    - pattern: os.environb[...]
    - pattern: os.environb.get(...)
    - pattern: os.getenv(...)
    - pattern: os.getenvb(...)

        # system information
    - pattern: os.uname(...)
    - pattern: os.confstr(...)
    - pattern: os.confstr_names
    - pattern: os.sysconf(...)
    - pattern: os.sysconf_names
    - pattern: platform.release(...)
    - pattern: platform.version(...)
    - pattern: platform.uname(...)
    - pattern: platform.win32_ver(...)
    - pattern: platform.win32_edition(...)
    - pattern: platform.win32_is_iot(...)
    - pattern: platform.mac_ver(...)
    - pattern: platform.ios_ver(...)
    - pattern: platform.libc_ver(...)
    - pattern: platform.freedesktop_os_release(...)
    - pattern: platform.android_ver(...)

        # network information
    - pattern: psutil.net_connections(...)
    - pattern: psutil.net_if_addrs(...)
    - pattern: psutil.net_if_stats(...)
    - pattern: platform.node(...)
    - pattern: platform.platform(...)
    - pattern: socket.gethostname(...)
    - pattern: socket.gethostbyname(...)
    - pattern: socket.gethostbyname_ex(...)
    - pattern: socket.getfqdn(...)
    - pattern: socket.if_nameindex(...)

        # user information
    - pattern: psutil.users(...)

        # sensitive information
    - pattern: getpass.getpass(...)
    - pattern: getpass.unix_getpass(...)
    - pattern: getpass.win_getpass(...)
    - pattern: getpass.getuser(...)
    - pattern: pwd.getpwuid(...)
    - pattern: pwd.getpwnam(...)
    - pattern: pwd.getpwall(...)
    - pattern: keyring.get_keyring(...)
    - pattern: keyring.get_password(...)
    - pattern: keyring.get_credential(...)

        # file exfiltration
    - pattern: os.read(...)
    - patterns:
      - pattern-either:
        - pattern-inside: |
            with open(...) as $FILE:
                ...
        - pattern-inside: |
            with builtins.open(...) as $FILE:
                ...
        - pattern-inside: |
            with __import__('builtins').open(...) as $FILE:
                ...
        - pattern-inside: |
            $FILE = open(...)
            ...
        - pattern-inside: |
            $FILE = builtins.open(...)
            ...
        - pattern-inside: |
            $FILE = __import__('builtins').open(...)
            ...
      - pattern-either:
        - pattern: $FILE.read(...)
        - pattern: $FILE.readlines(...)
    - pattern: yaml.safe_load(...)
    - pattern: json.loads(...)

  pattern-sinks:
  - pattern-either:
        # remote connection
        # using socket module
    - patterns:
      - pattern-either:
        - patterns:
          - pattern-either:
            - pattern-inside: |
                $SOC = socket.socket(...)
                ...
            - pattern-inside: |
                with socket.socket(...) as $SOC:
                    ...
          - pattern-either:
            - pattern-inside: |
                $SOC.connect(...)
                ...
            - pattern-inside: |
                $SOC.connect_ex(...)
                ...
            - pattern-inside: |
                $SOC.bind(...)
                ...
            # socket.socket and socket.connect in one call
        - pattern-inside: |
            $SOC = socket.create_connection(...)
            ...
        - pattern-inside: |
            with socket.create_connection(...) as $SOC:
                ...
           # socket.socket and socket.bind in one call
        - pattern-inside: |
            $SOC = socket.create_server(...)
            ...
        - pattern-inside: |
            with socket.create_server(...) as $SOC:
                ...
      - pattern-either:
            # Assume that .accept, .listen was called somewhere if needed
        - pattern: $SOC.send(...)
        - pattern: $SOC.recv(...)
        - pattern: $SOC.recvfrom(...)
        - pattern: $SOC.recvmsg(...)
        - pattern: $SOC.recvmsg_into(...)
        - pattern: $SOC.recvfrom_into(...)
        - pattern: $SOC.recv_into(...)
        - pattern: $SOC.sendall(...)
        - pattern: $SOC.sendto(...)
        - pattern: $SOC.sendmsg(...)
        - pattern: $SOC.sendmsg_afalg(...)
        - pattern: $SOC.sendfile(...)
        # using requests module
    - pattern: requests.get(...)
    - pattern: requests.post(...)
    - pattern: requests.put(...)
    - pattern: requests.delete(...)
    - pattern: requests.head(...)
    - pattern: requests.options(...)
    - pattern: requests.patch(...)
    # object creation like requests.Session(...) here is omitted as exfiltrated data likely won't
    # be passed into the parameters of those objects
    - pattern: requests.Session(...).get(...)
    - pattern: requests.Session(...).delete(...)
    - pattern: requests.Session(...).head(...)
    - pattern: requests.Session(...).options(...)
    - pattern: requests.Session(...).patch(...)
    - pattern: requests.Session(...).post(...)
    - pattern: requests.Session(...).put(...)
    - pattern: requests.Session(...).request(...)
    - pattern: requests.Session(...).send(...)
    - pattern: requests.Request(...)
        # using urllib3 module
    - pattern: urllib3.request(...)
    - pattern: urllib3.PoolManager(...).request(...)
    - pattern: urllib3.PoolManager(...).request_encode_body(...)
    - pattern: urllib3.PoolManager(...).request_encode_url(...)
    - pattern: urllib3.PoolManager(...).urlopen(...)
    - pattern: urllib3.HTTPConnectionPool(...).urlopen(...)
    - pattern: urllib3.HTTPConnectionPool(...).request(...)
    - pattern: urllib3.HTTPConnectionPool(...).request_encode_body(...)
    - pattern: urllib3.HTTPConnectionPool(...).request_encode_url(...)
    - pattern: urllib3.HTTPSConnectionPool(...).urlopen(...)
    - pattern: urllib3.HTTPSConnectionPool(...).request(...)
    - pattern: urllib3.HTTPSConnectionPool(...).request_encode_body(...)
    - pattern: urllib3.HTTPSConnectionPool(...).request_encode_url(...)
    - pattern: urllib3.HTTPConnection(...).request(...)
    - pattern: urllib3.HTTPConnection(...).request_chunked(...)
    - pattern: urllib3.HTTPSConnection(...).request(...)
    - pattern: urllib3.HTTPSConnection(...).request_chunked(...)
    - pattern: urllib3.ProxyManager(...).urlopen(...)
        # using urllib
    - pattern: urllib.request(...)
    - pattern: urllib.request.urlopen(...)
        # using httpx
    - pattern: httpx.request(...)
    - pattern: httpx.get(...)
    - pattern: httpx.post(...)
    - pattern: httpx.put(...)
    - pattern: httpx.delete(...)
    - pattern: httpx.head(...)
    - pattern: httpx.options(...)
    - pattern: httpx.stream(...)
    - pattern: httpx.patch(...)
    - pattern: httpx.AsyncClient(...).request(...)
    - pattern: httpx.AsyncClient(...).get(...)
    - pattern: httpx.AsyncClient(...).post(...)
    - pattern: httpx.AsyncClient(...).put(...)
    - pattern: httpx.AsyncClient(...).delete(...)
    - pattern: httpx.AsyncClient(...).head(...)
    - pattern: httpx.AsyncClient(...).options(...)
    - pattern: httpx.AsyncClient(...).stream(...)
    - pattern: httpx.AsyncClient(...).patch(...)
    - pattern: httpx.AsyncClient(...).send(...)
    - pattern: httpx.Client(...).request(...)
    - pattern: httpx.Client(...).get(...)
    - pattern: httpx.Client(...).post(...)
    - pattern: httpx.Client(...).put(...)
    - pattern: httpx.Client(...).delete(...)
    - pattern: httpx.Client(...).head(...)
    - pattern: httpx.Client(...).options(...)
    - pattern: httpx.Client(...).stream(...)
    - pattern: httpx.Client(...).patch(...)
    - pattern: httpx.Client(...).send(...)
