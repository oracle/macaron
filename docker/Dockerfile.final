# Copyright (c) 2022 - 2023, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/.

# This stage is used to build and install Python3.11.1 from source.
# It will be installed to INSTALL_DIR="/usr/local" and this folder
# is then later copied to the production image.
FROM container-registry.oracle.com/os/oraclelinux:9-slim as python-builder

ENV HOME="/home/macaron" \
    BUILD_DIR="/root" \
    INSTALL_DIR="/usr/local" \
    PYTHON3_VERSION=3.11.1 \
    PATH=$INSTALL_DIR/bin:$PATH

RUN microdnf install -y dnf && \
    dnf -y update && \
    dnf -y install dnf-plugins-core && \
    dnf -y config-manager --add-repo https://yum.oracle.com/repo/OracleLinux/OL9/codeready/builder/x86_64/ && \
    dnf -y builddep python3

# Compile and install Python from source.
# TODO: verify the signature of the Python source code using sigstore.
RUN mkdir -p $BUILD_DIR/python && \
    cd $BUILD_DIR/python && \
    curl -O https://www.python.org/ftp/python/$PYTHON3_VERSION/Python-$PYTHON3_VERSION.tgz && \
    tar xzf Python-$PYTHON3_VERSION.tgz && \
    cd Python-$PYTHON3_VERSION && \
    ./configure --prefix=$INSTALL_DIR && \
    # https://docs.python.org/3/using/unix.html?highlight=altinstall#building-python
    make -j altinstall && \
    cd $BUILD_DIR/python && \
    rm -rf Python-$PYTHON3_VERSION && \
    rm Python-$PYTHON3_VERSION.tgz && \
    $INSTALL_DIR/bin/python3.11 --version

# This stage is for the the final production image.
# The final image contains the Python3.11.1 installation from the python-builder stage,
# the runtime library (i.e openssl, git and jdk11) and the Python dependencies of Macaron.
FROM container-registry.oracle.com/os/oraclelinux:9-slim

# Build time ARG. This argument specifies the path of dist from the host machine.
ARG DIST_PATH
ARG WHEEL_PATH
ARG WHEEL_FILE_NAME

ENV HOME="/home/macaron" \
    INSTALL_DIR="/usr/local" \
    JAVA_HOME="/usr/lib/jvm/java-11-openjdk"

ENV PACKAGE_PATH=$HOME/src/macaron

# Append the path with the directory of the Python installation from the first
# Docker build stage and the JAVA_HOME directory.
ENV PATH=$INSTALL_DIR/bin:$JAVA_HOME/bin:$PATH

# Create the macaron user and group with abritary UID and GID.
# The macaron GID and UID in this image will be modified by the
# user.sh script on startup to get the UID and GID of the user who started
# the Docker container.
RUN groupadd --gid 43147 macaron && \
    useradd --uid 43147 --create-home --gid 43147 macaron

RUN microdnf install -y \
    sqlite-devel-3.34.1-5.el9 \
    git-2.31.1-2.el9.2 \
    java-11-openjdk-devel-1:11.0.17.0.8-2.0.1.el9_0 \
    unzip

# Clean up should happen last.
RUN microdnf clean all -y && \
    rm -rf /var/cache/yum && \
    rm -rf /var/cache/dnf

COPY --from=python-builder $INSTALL_DIR $INSTALL_DIR

WORKDIR $HOME

# Installing the Python dependencies in the Python virtual environment.
# We switch to user macaron so that when we install the dependencies using pip,
# the warning of not having correct ownership of /home/macaron is not raised.
# TODO: resolve hardcoded file names.
USER macaron:macaron
COPY --chown=macaron:macaron $WHEEL_PATH/$WHEEL_FILE_NAME $HOME/$WHEEL_FILE_NAME
RUN /usr/local/bin/python3.11 -m venv --copies $HOME/.venv && \
    . .venv/bin/activate && \
    pip install $HOME/$WHEEL_FILE_NAME && \
    rm -rf $HOME/$WHEEL_FILE_NAME && \
    deactivate

COPY --chown=macaron:macaron $DIST_PATH/resources $PACKAGE_PATH/resources
COPY --chown=macaron:macaron $DIST_PATH/bin $PACKAGE_PATH/bin

COPY --chown=macaron:macaron docker/user.sh $HOME/user.sh

# We enable the root user here so that the user.sh script can modify the
# GID and UID of user macaron at startup to match the GID and UID
# of the current user in the host machine.
USER root
ENTRYPOINT [ "./user.sh" ]
