# Copyright (c) 2022 - 2022, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/.

# This workflow lints the PR's title and commits. It uses the commitizen
# package (https://github.com/commitizen-tools/commitizen) and its `cz`
# tool to check the title of the PR and all commit messages of the branch
# which triggers this Action.

name: Check conventional commits
on:
  pull_request:
    branches:
    - '*'
    types:
    - opened
    - reopened
    - edited
    - synchronize
permissions:
  contents: read

jobs:
  conventional-commits:
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository
      uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912 # v4.4.0
      with:
        python-version: '3.11'

    # Install Commitizen without using the package's Makefile: that's much faster than
    # creating a venv and installing heaps of dependencies that aren't required for this job.
    - name: Set up Commitizen
      run: |
        pip install --upgrade pip wheel
        pip install 'commitizen ==2.37.1'

    # Run Commitizen to check the title of the PR which triggered this workflow, and check
    # all commit messages of the PR's branch. If any of the checks fails then this job fails.
    - name: Check PR title
      run: echo "$PR_TITLE" | cz check
      env:
        PR_TITLE: ${{ github.event.pull_request.title }}
    - name: Check PR commit messages
      run: |
        git remote add other "$PR_HEAD_REPO_CLONE_URL"
        git fetch other
        cz check --rev-range "origin/$PR_BASE_REF..other/$PR_HEAD_REF"
      env:
        PR_BASE_REF: ${{ github.event.pull_request.base.ref }}
        PR_HEAD_REF: ${{ github.event.pull_request.head.ref }}
        PR_HEAD_REPO_CLONE_URL: ${{ github.event.pull_request.head.repo.clone_url }}
